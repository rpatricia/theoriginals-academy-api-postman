{
	"info": {
		"_postman_id": "3a96783f-c197-440f-b5de-431da3af7bf3",
		"name": "1-Auth",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20042485",
		"_collection_link": "https://the-originals.postman.co/workspace/The-Originals~9bb72b60-65a8-4a40-a925-b3363034a808/collection/20042485-3a96783f-c197-440f-b5de-431da3af7bf3?action=share&source=collection_link&creator=20042485"
	},
	"item": [
		{
			"name": "Login-Funcional",
			"item": [
				{
					"name": "LoginAdm",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.set(\"Token\", pm.response.json().token);\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"packages": {},
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"{{Password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/login/",
							"host": [
								"{{url}}"
							],
							"path": [
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ConsultarToken",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/validateToken",
							"host": [
								"{{url}}"
							],
							"path": [
								"validateToken"
							]
						}
					},
					"response": []
				},
				{
					"name": "CadastarUsuário",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function firstName() {\r",
									" \r",
									"    let firstName = [\"Lidy\", \"Ravi\", \"Luciana\", \"Silvana\", \"Elias\", \"Patricia\", \"Kaiky\", \"Barbara\", \"Bernardo\", \"Sergio\", \"Pietro\", \"Carlos\", \"Pedro\", \"Lucas\"];\r",
									"    let randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
									" \r",
									"    return randomItem\r",
									"}\r",
									" \r",
									"pm.environment.set(\"FirstName\", firstName())\r",
									" \r",
									"function lastName() {\r",
									" \r",
									"    let lastName = [\"Rodrigues Silva\", \"Alves Silva\", \"Lazaro Silva\", \"Bastos Silva\", \"Silva\", \"Souza\", \"Costa Silva\", \"Santos\", \"Carvalho\", \"Monteiro\", \"Torres\", \"Cardoso\", \"Mendes\"];\r",
									"    let randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
									" \r",
									"    return randomItem\r",
									"}\r",
									" \r",
									"pm.environment.set(\"LastName\", lastName());\r",
									" \r",
									" \r",
									"pm.environment.set(\"fullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"));\r",
									" \r",
									"function cpfGeneretor(){\r",
									"    let number = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"]\r",
									" \r",
									"    let cpf = ''\r",
									" \r",
									"    for (let i = 0; i < 11; i++) {\r",
									"        cpf += number[Math.floor(Math.random() * number.length)];\r",
									"    }\r",
									"    return cpf\r",
									"}\r",
									"pm.environment.set('cpf', cpfGeneretor());\r",
									" \r",
									"pm.environment.set(\"mail\",pm.variables.replaceIn('{{$randomEmail}}'))\r",
									" \r",
									"pm.environment.set(\"password\",pm.variables.replaceIn('{{$randomHexColor}}'+ 'aA'))"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"{{fullName}}\",\r\n    \"mail\": \"{{mail}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{cpf}}\",\r\n    \"confirmPassword\": \"{{password}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/user/",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "LoginUsuárioCriado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.set(\"Token\", pm.response.json().token);\r",
									"\r",
									"\r",
									"//pm.environment.set('Token', pm.response.json().token)\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mail\": \"{{mail}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/login/",
							"host": [
								"{{url}}"
							],
							"path": [
								"login",
								""
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "apikey",
				"apikey": [
					{
						"key": "value",
						"value": "{{Token}}",
						"type": "string"
					},
					{
						"key": "key",
						"value": "Authorization",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Login- Não Funcional",
			"item": [
				{
					"name": "LoginAdm",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.set(\"Token\", pm.response.json().token);\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"packages": {},
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"{{Password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/login/",
							"host": [
								"{{url}}"
							],
							"path": [
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "NomeInválido",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"fullName\",pm.variables.replaceIn('{{$randomFullName}}'))\r",
									" \r",
									"function cpfGeneretor(){\r",
									"    let number = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"]\r",
									" \r",
									"    let cpf = ''\r",
									" \r",
									"    for (let i = 0; i < 11; i++) {\r",
									"        cpf += number[Math.floor(Math.random() * number.length)];\r",
									"    }\r",
									"    return cpf\r",
									"}\r",
									"pm.environment.set('cpf', cpfGeneretor());\r",
									" \r",
									"pm.environment.set(\"mail\",pm.variables.replaceIn('{{$randomEmail}}'))\r",
									" \r",
									"pm.environment.set(\"password\",pm.variables.replaceIn('{{$randomHexColor}}'+ 'aA'))"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"check msg: O nome e sobrenome é obrigatório.\", function () {\r",
									"    pm.expect(\"Informe o nome e sobrenome com as iniciais em letra maiúscula e sem caracteres especiais.\").to.eql(JSON.parse(responseBody).error[0]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"Renata\",\r\n    \"mail\": \"{{mail}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{cpf}}\",\r\n    \"confirmPassword\": \"{{password}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/user/",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "emailErrado",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" function firstName() {\r",
									" \r",
									"    let firstName = [\"Lidy\", \"Ravi\", \"Luciana\", \"Silvana\", \"Elias\", \"Patricia\", \"Kaiky\", \"Barbara\", \"Bernardo\", \"Sergio\", \"Pietro\", \"Carlos\", \"Pedro\", \"Lucas\"];\r",
									"    let randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
									" \r",
									"    return randomItem\r",
									"}\r",
									" \r",
									"pm.environment.set(\"FirstName\", firstName())\r",
									" \r",
									"function lastName() {\r",
									" \r",
									"    let lastName = [\"Rodrigues Silva\", \"Alves Silva\", \"Lazaro Silva\", \"Bastos Silva\", \"Silva\", \"Souza\", \"Costa Silva\", \"Santos\", \"Carvalho\", \"Monteiro\", \"Torres\", \"Cardoso\", \"Mendes\"];\r",
									"    let randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
									" \r",
									"    return randomItem\r",
									"}\r",
									" \r",
									"pm.environment.set(\"LastName\", lastName());\r",
									" \r",
									" \r",
									"pm.environment.set(\"fullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"));\r",
									"function cpfGeneretor(){\r",
									"    let number = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"]\r",
									" \r",
									"    let cpf = ''\r",
									" \r",
									"    for (let i = 0; i < 11; i++) {\r",
									"        cpf += number[Math.floor(Math.random() * number.length)];\r",
									"    }\r",
									"    return cpf\r",
									"}\r",
									"pm.environment.set('cpf', cpfGeneretor());\r",
									" \r",
									"pm.environment.set(\"mail\",pm.variables.replaceIn('{{$randomEmail}}'))\r",
									" \r",
									"pm.environment.set(\"password\",pm.variables.replaceIn('{{$randomHexColor}}'+ 'aA'))"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"check msg: O e-mail informado é inválido.\", function () {\r",
									"    pm.expect(\"O e-mail informado é inválido. Informe um e-mail no formato [nome@domínio.com].\").to.eql(JSON.parse(responseBody).error[0]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"{{fullName}}\",\r\n    \"mail\": \"tests.com\",\r\n    \"password\": \"{{password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{cpf}}\",\r\n    \"confirmPassword\": \"{{password}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/user/",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "SenhaIncorreta",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" function firstName() {\r",
									" \r",
									"    let firstName = [\"Lidy\", \"Ravi\", \"Luciana\", \"Silvana\", \"Elias\", \"Patricia\", \"Kaiky\", \"Barbara\", \"Bernardo\", \"Sergio\", \"Pietro\", \"Carlos\", \"Pedro\", \"Lucas\"];\r",
									"    let randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
									" \r",
									"    return randomItem\r",
									"}\r",
									" \r",
									"pm.environment.set(\"FirstName\", firstName())\r",
									" \r",
									"function lastName() {\r",
									" \r",
									"    let lastName = [\"Rodrigues Silva\", \"Alves Silva\", \"Lazaro Silva\", \"Bastos Silva\", \"Silva\", \"Souza\", \"Costa Silva\", \"Santos\", \"Carvalho\", \"Monteiro\", \"Torres\", \"Cardoso\", \"Mendes\"];\r",
									"    let randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
									" \r",
									"    return randomItem\r",
									"}\r",
									" \r",
									"pm.environment.set(\"LastName\", lastName());\r",
									" \r",
									" \r",
									"pm.environment.set(\"fullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"));\r",
									" \r",
									"function cpfGeneretor(){\r",
									"    let number = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"]\r",
									" \r",
									"    let cpf = ''\r",
									" \r",
									"    for (let i = 0; i < 11; i++) {\r",
									"        cpf += number[Math.floor(Math.random() * number.length)];\r",
									"    }\r",
									"    return cpf\r",
									"}\r",
									"pm.environment.set('cpf', cpfGeneretor());\r",
									" \r",
									"pm.environment.set(\"mail\",pm.variables.replaceIn('{{$randomEmail}}'))\r",
									" \r",
									"pm.environment.set(\"password\",pm.variables.replaceIn('{{$randomHexColor}}'+ 'aA'))"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"check msg: A Senha informada é inválida.\", function () {\r",
									"    pm.expect(\"Senha precisa ter: uma letra maiúscula, uma letra minúscula, um número, um caractere especial(@#$%) e tamanho entre 8-12.\").to.eql(JSON.parse(responseBody).error[0]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"{{fullName}}\",\r\n    \"mail\": \"{{mail}}\",\r\n    \"password\": \"#232323aa\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{cpf}}\",\r\n    \"confirmPassword\": \"#232323aa\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/user/",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "CPFInválido",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" function firstName() {\r",
									" \r",
									"    let firstName = [\"Lidy\", \"Ravi\", \"Luciana\", \"Silvana\", \"Elias\", \"Patricia\", \"Kaiky\", \"Barbara\", \"Bernardo\", \"Sergio\", \"Pietro\", \"Carlos\", \"Pedro\", \"Lucas\"];\r",
									"    let randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
									" \r",
									"    return randomItem\r",
									"}\r",
									" \r",
									"pm.environment.set(\"FirstName\", firstName())\r",
									" \r",
									"function lastName() {\r",
									" \r",
									"    let lastName = [\"Rodrigues Silva\", \"Alves Silva\", \"Lazaro Silva\", \"Bastos Silva\", \"Silva\", \"Souza\", \"Costa Silva\", \"Santos\", \"Carvalho\", \"Monteiro\", \"Torres\", \"Cardoso\", \"Mendes\"];\r",
									"    let randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
									" \r",
									"    return randomItem\r",
									"}\r",
									" \r",
									"pm.environment.set(\"LastName\", lastName());\r",
									" \r",
									" \r",
									"pm.environment.set(\"fullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"));\r",
									"function cpfGeneretor(){\r",
									"    let number = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"]\r",
									" \r",
									"    let cpf = ''\r",
									" \r",
									"    for (let i = 0; i < 11; i++) {\r",
									"        cpf += number[Math.floor(Math.random() * number.length)];\r",
									"    }\r",
									"    return cpf\r",
									"}\r",
									"pm.environment.set('cpf', cpfGeneretor());\r",
									" \r",
									"pm.environment.set(\"mail\",pm.variables.replaceIn('{{$randomEmail}}'))\r",
									" \r",
									"pm.environment.set(\"password\",pm.variables.replaceIn('{{$randomHexColor}}'+ 'aA'))"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"check msg: CPF inválido.\", function () {\r",
									"    pm.expect(\"Deve preencher o CPF com 11 dígitos\").to.eql(JSON.parse(responseBody).error[0]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"{{fullName}}\",\r\n    \"mail\": \"{{mail}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"123456789\",\r\n    \"confirmPassword\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/user/",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{Token}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "Authorization",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}